name: Test Suite

on:
  push:
    branches: [ main, vp/*, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  # E2E tests - comprehensive end-to-end testing
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure Supabase IP allowlist FIRST
      run: |
        # Add ONLY the current runner IP using official Management API
        RUNNER_IP=$(curl -s https://ipinfo.io/ip)
        echo "üîç Runner IP: $RUNNER_IP"
        
        # Get current network restrictions
        echo "üîç Getting current restrictions..."
        CURRENT_RESTRICTIONS=$(curl -s -w "HTTP_CODE:%{http_code}" -H "Authorization: Bearer $SUPABASE_ACCESS_TOKEN" \
          "https://api.supabase.com/v1/projects/$SUPABASE_PROJECT_ID/network-restrictions")
        echo "üîç Current restrictions response: $CURRENT_RESTRICTIONS"
        
        # Add runner IP to allowlist using official API
        echo "üîç Adding runner IP to allowlist..."
        API_RESPONSE=$(curl -s -w "HTTP_CODE:%{http_code}" -X PUT "https://api.supabase.com/v1/projects/$SUPABASE_PROJECT_ID/network-restrictions" \
          -H "Authorization: Bearer $SUPABASE_ACCESS_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{
            \"allowed_cidrs\": [\"${RUNNER_IP}/32\"]
          }")
        
        echo "üîç API Response: $API_RESPONSE"
        
        # Check if API call was successful
        if [[ $API_RESPONSE == *"HTTP_CODE:200"* ]] || [[ $API_RESPONSE == *"HTTP_CODE:204"* ]]; then
          echo "‚úÖ Successfully added runner IP ${RUNNER_IP}/32 to allowlist"
        else
          echo "‚ùå Failed to add IP to allowlist. Response: $API_RESPONSE"
          echo "‚ö†Ô∏è  Continuing anyway - tests may fail"
        fi
        
        # Wait for changes to propagate
        echo "‚è≥ Waiting 10 seconds for network changes to propagate..."
        sleep 10
        
        # Verify the change
        echo "üîç Verifying network restrictions..."
        FINAL_RESTRICTIONS=$(curl -s -H "Authorization: Bearer $SUPABASE_ACCESS_TOKEN" \
          "https://api.supabase.com/v1/projects/$SUPABASE_PROJECT_ID/network-restrictions")
        echo "üîç Final restrictions: $FINAL_RESTRICTIONS"
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run E2E tests
      run: |
        python app/tests/test_runner.py
      env:
        # Database credentials for CI
        SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
        # Add any required environment variables for E2E tests
        HUGGINGFACE_API_TOKEN: ${{ secrets.HUGGINGFACE_API_TOKEN }}
        OPEN_ROUTER_API_KEY: ${{ secrets.OPEN_ROUTER_API_KEY }}

  # Linting
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        ./lint.sh